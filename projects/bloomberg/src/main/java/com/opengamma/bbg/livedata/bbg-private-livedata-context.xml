<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
    
  <import resource="classpath:/com/opengamma/bbg/bbg-context-common.xml"/>  
  <import resource="classpath:/com/opengamma/bbg/bbg-reference-data-context.xml"/>

  <!-- TODO: stop using this, everything should switch to explicit weak, but we have to wait for that change to propagate -->  
  <bean id="volatilitySubscriptionSelector" class="com.opengamma.bbg.livedata.faketicks.ByTypeFakeSubscriptionSelector">
    <constructor-arg>
      <list>
        <value>SWAPTION VOLATILITY</value>
        <value>OPTION VOLATILITY</value>
      </list>
    </constructor-arg>
  </bean>
  
  
    <bean id="weakSubscriptionSelector" class="com.opengamma.bbg.livedata.faketicks.BySchemeFakeSubscriptionSelector">
    <constructor-arg>
      <list>
        <value>BLOOMBERG_BUID_WEAK</value>
        <value>BLOOMBERG_TICKER_WEAK</value>
      </list>
    </constructor-arg>
  </bean>
  
  <bean id="fakeSubscriptionSelector" class="com.opengamma.bbg.livedata.faketicks.UnionFakeSubscriptionSelector">
    <constructor-arg>
      <list>
          <ref bean="volatilitySubscriptionSelector" />
          <ref bean="weakSubscriptionSelector" />
      </list>
    </constructor-arg>
  </bean>
  
  <bean id="bbgLiveDataServer" class="com.opengamma.bbg.livedata.faketicks.CombiningBloombergLiveDataServer" init-method="start">
    <constructor-arg index="0" ref="fakeBloombergLiveDataServer" />
    <constructor-arg index="1" ref="bloombergLiveDataServer" />
    <constructor-arg index="2" ref="fakeSubscriptionSelector" />
    <constructor-arg index="3" ref="standardCacheManager" />
    
    <!-- TODO stop setting these properties on everything -->
    <property name="distributionSpecificationResolver" ref="bbgDistributionSpecificationResolver"/>
    <property name="entitlementChecker" ref="bbgEntitlementChecker"/>
    <property name="marketDataSenderFactory" ref="jmsSenderFactory"/>
    <!-- TODO expiration management -->
  </bean>

  <bean id="bloombergLiveDataServer" class="com.opengamma.bbg.livedata.BloombergLiveDataServer" init-method="start">
    <constructor-arg index="0" ref="standardBloombergConnector" />
    <constructor-arg index="1" ref="bloombergReferenceDataProvider" />
    <constructor-arg index="2" ref="standardCacheManager" />
    
    <property name="distributionSpecificationResolver" ref="bbgDistributionSpecificationResolver"/>
    <property name="entitlementChecker" ref="bbgEntitlementChecker"/>
    <property name="marketDataSenderFactory" ref="jmsSenderFactory"/>
    <property name="subscriptionLimit" value="1000"/>
  </bean>
    
  <bean id="fakeBloombergLiveDataServer" class="com.opengamma.bbg.livedata.faketicks.FakeSubscriptionBloombergLiveDataServer" init-method="start">
    <constructor-arg index="0" ref="bloombergLiveDataServer" />
    <constructor-arg index="1" ref="standardCacheManager" />
    
    <!-- NOTE: do not set distributionSpecificationResolver, it is derived from the underlying servers resolved-->
    <property name="entitlementChecker" ref="bbgEntitlementChecker"/>
    <property name="marketDataSenderFactory" ref="jmsSenderFactory"/> 
  </bean>

  <bean id="bbgDistributionSpecificationResolver" factory-bean="bloombergLiveDataServer" factory-method="getDefaultDistributionSpecificationResolver" />

  <bean id="bbgEntitlementChecker" class="com.opengamma.livedata.entitlement.UserEntitlementChecker">
    <constructor-arg index="0">
      <bean class="com.opengamma.security.user.HibernateUserManager">
        <constructor-arg ref="dbConnector" />
      </bean>
    </constructor-arg>
    <constructor-arg index="1" ref="bbgDistributionSpecificationResolver"/>
  </bean>

  <bean id="bbgServerMBean" class="com.opengamma.livedata.server.LiveDataServerMBean">
    <constructor-arg ref="bbgLiveDataServer"/>
  </bean>
    
  <bean id="fakeBbgServerMBean" class="com.opengamma.livedata.server.LiveDataServerMBean">
    <constructor-arg ref="fakeBloombergLiveDataServer"/>
  </bean>
    
  <bean id="realBbgServerMBean" class="com.opengamma.bbg.livedata.BloombergLiveDataServerMBean">
    <constructor-arg ref="bloombergLiveDataServer"/>
  </bean>
</beans>
