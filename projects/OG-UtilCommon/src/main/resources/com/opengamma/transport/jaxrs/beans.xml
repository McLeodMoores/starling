<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd">

  <!-- If using OG-Component then SpringJettyComponentFactory does this -->

  <bean id="jsonToFudge" class="com.opengamma.transport.jaxrs.FudgeObjectJSONConsumer" scope="singleton">
  </bean>
  <bean id="fudgeToJson" class="com.opengamma.transport.jaxrs.FudgeObjectJSONProducer" scope="singleton">
  </bean>
  <bean id="xmlToFudge" class="com.opengamma.transport.jaxrs.FudgeObjectXMLConsumer" scope="singleton">
  </bean>
  <bean id="fudgeToXml" class="com.opengamma.transport.jaxrs.FudgeObjectXMLProducer" scope="singleton">
  </bean>
  <bean id="binaryToFudge" class="com.opengamma.transport.jaxrs.FudgeObjectBinaryConsumer" scope="singleton">
  </bean>
  <bean id="fudgeToBinary" class="com.opengamma.transport.jaxrs.FudgeObjectBinaryProducer" scope="singleton">
  </bean>

  <bean id="dataNotFoundExceptionMapper" class="com.opengamma.util.rest.DataNotFoundExceptionMapper" scope="singleton">
  </bean>
  <bean id="dataDuplicationExceptionMapper" class="com.opengamma.util.rest.DataDuplicationExceptionMapper" scope="singleton">
  </bean>
  <bean id="illegalArgumentExceptionMapper" class="com.opengamma.util.rest.IllegalArgumentExceptionMapper" scope="singleton">
  </bean>
  <bean id="unsupportedOperationExceptionMapper" class="com.opengamma.util.rest.UnsupportedOperationExceptionMapper" scope="singleton">
  </bean>
  <bean id="webApplicationExceptionMapper" class="com.opengamma.util.rest.WebApplicationExceptionMapper" scope="singleton">
  </bean>
  <bean id="throwableExceptionMapper" class="com.opengamma.util.rest.ThrowableExceptionMapper" scope="singleton">
  </bean>

</beans>
