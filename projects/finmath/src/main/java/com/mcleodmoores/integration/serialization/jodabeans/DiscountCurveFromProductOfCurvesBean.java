/**
 * Copyright (C) 2014 - present McLeod Moores Software Limited.  All rights reserved.
 */
package com.mcleodmoores.integration.serialization.jodabeans;
import java.util.Collection;
import java.util.Map;

import org.joda.beans.Bean;
import org.joda.beans.BeanBuilder;
import org.joda.beans.BeanDefinition;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;

import com.opengamma.util.ArgumentChecker;

import net.finmath.marketdata.model.curves.CurveInterface;
import net.finmath.marketdata.model.curves.DiscountCurveFromProductOfCurves;
import net.finmath.marketdata.model.curves.DiscountCurveInterface;

/**
 * Bean for a Finmath {@link DiscountCurveFromProductOfCurvesBean}.
 */
@BeanDefinition
public class DiscountCurveFromProductOfCurvesBean extends AbstractCurveBean {

  /** The serialization version. */
  private static final long serialVersionUID = 1L;

  /**
   * The discount curves.
   */
  @PropertyDefinition(validate = "notNull")
  private DiscountCurveInterface[] _discountCurves;

  /**
   * For the builder.
   */
  /* package */DiscountCurveFromProductOfCurvesBean() {
    super();
  }

  /**
   * Constructs an instance from an array of curves.
   * @param name The name of this curve, not null
   * @param referenceDateString The reference date for this curve, not null
   * @param discountCurves The discount curves, not null
   */
  public DiscountCurveFromProductOfCurvesBean(final String name, final String referenceDateString, final DiscountCurveInterface[] discountCurves) {
    super(name, referenceDateString);
    setDiscountCurves(discountCurves);
  }

  /**
   * Constructs an instance from a collection of curves.
   * @param name The name of this curve, not null
   * @param referenceDateString The reference date for this curve, not null
   * @param discountCurves The discount curves, not null
   */
  public DiscountCurveFromProductOfCurvesBean(final String name, final String referenceDateString, final Collection<DiscountCurveInterface> discountCurves) {
    super(name, referenceDateString);
    ArgumentChecker.notNull(discountCurves, "discountCurves");
    setDiscountCurves(discountCurves.toArray(new DiscountCurveInterface[discountCurves.size()]));
  }

  @Override
  public CurveInterface buildCurve() {
    return new DiscountCurveFromProductOfCurves(getName(), getReferenceDate(), getDiscountCurves());
  }

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code DiscountCurveFromProductOfCurvesBean}.
   * @return the meta-bean, not null
   */
  public static DiscountCurveFromProductOfCurvesBean.Meta meta() {
    return DiscountCurveFromProductOfCurvesBean.Meta.INSTANCE;
  }

  static {
    JodaBeanUtils.registerMetaBean(DiscountCurveFromProductOfCurvesBean.Meta.INSTANCE);
  }

  @Override
  public DiscountCurveFromProductOfCurvesBean.Meta metaBean() {
    return DiscountCurveFromProductOfCurvesBean.Meta.INSTANCE;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the discount curves.
   * @return the value of the property, not null
   */
  public DiscountCurveInterface[] getDiscountCurves() {
    return _discountCurves;
  }

  /**
   * Sets the discount curves.
   * @param discountCurves  the new value of the property, not null
   */
  public void setDiscountCurves(DiscountCurveInterface[] discountCurves) {
    JodaBeanUtils.notNull(discountCurves, "discountCurves");
    this._discountCurves = discountCurves;
  }

  /**
   * Gets the the {@code discountCurves} property.
   * @return the property, not null
   */
  public final Property<DiscountCurveInterface[]> discountCurves() {
    return metaBean().discountCurves().createProperty(this);
  }

  //-----------------------------------------------------------------------
  @Override
  public DiscountCurveFromProductOfCurvesBean clone() {
    return JodaBeanUtils.cloneAlways(this);
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      DiscountCurveFromProductOfCurvesBean other = (DiscountCurveFromProductOfCurvesBean) obj;
      return JodaBeanUtils.equal(getDiscountCurves(), other.getDiscountCurves()) &&
          super.equals(obj);
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = 7;
    hash = hash * 31 + JodaBeanUtils.hashCode(getDiscountCurves());
    return hash ^ super.hashCode();
  }

  @Override
  public String toString() {
    StringBuilder buf = new StringBuilder(64);
    buf.append("DiscountCurveFromProductOfCurvesBean{");
    int len = buf.length();
    toString(buf);
    if (buf.length() > len) {
      buf.setLength(buf.length() - 2);
    }
    buf.append('}');
    return buf.toString();
  }

  @Override
  protected void toString(StringBuilder buf) {
    super.toString(buf);
    buf.append("discountCurves").append('=').append(JodaBeanUtils.toString(getDiscountCurves())).append(',').append(' ');
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code DiscountCurveFromProductOfCurvesBean}.
   */
  public static class Meta extends AbstractCurveBean.Meta {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code discountCurves} property.
     */
    private final MetaProperty<DiscountCurveInterface[]> _discountCurves = DirectMetaProperty.ofReadWrite(
        this, "discountCurves", DiscountCurveFromProductOfCurvesBean.class, DiscountCurveInterface[].class);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, (DirectMetaPropertyMap) super.metaPropertyMap(),
        "discountCurves");

    /**
     * Restricted constructor.
     */
    protected Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case -624113147:  // discountCurves
          return _discountCurves;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public BeanBuilder<? extends DiscountCurveFromProductOfCurvesBean> builder() {
      return new DirectBeanBuilder<DiscountCurveFromProductOfCurvesBean>(new DiscountCurveFromProductOfCurvesBean());
    }

    @Override
    public Class<? extends DiscountCurveFromProductOfCurvesBean> beanType() {
      return DiscountCurveFromProductOfCurvesBean.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code discountCurves} property.
     * @return the meta-property, not null
     */
    public final MetaProperty<DiscountCurveInterface[]> discountCurves() {
      return _discountCurves;
    }

    //-----------------------------------------------------------------------
    @Override
    protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
      switch (propertyName.hashCode()) {
        case -624113147:  // discountCurves
          return ((DiscountCurveFromProductOfCurvesBean) bean).getDiscountCurves();
      }
      return super.propertyGet(bean, propertyName, quiet);
    }

    @Override
    protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
      switch (propertyName.hashCode()) {
        case -624113147:  // discountCurves
          ((DiscountCurveFromProductOfCurvesBean) bean).setDiscountCurves((DiscountCurveInterface[]) newValue);
          return;
      }
      super.propertySet(bean, propertyName, newValue, quiet);
    }

    @Override
    protected void validate(Bean bean) {
      JodaBeanUtils.notNull(((DiscountCurveFromProductOfCurvesBean) bean)._discountCurves, "discountCurves");
      super.validate(bean);
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
