<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.opengamma.masterdb.batch">
  
  <typedef class="com.opengamma.masterdb.batch.HbComputationTargetType" name="target_type" />
  <typedef class="com.opengamma.util.db.hibernate.types.PersistentCompositeUniqueId" name="unique_id"/>

  <class name="com.opengamma.batch.domain.HbComputationTargetSpecification" table="rsk_computation_target"
         dynamic-update="true">
    <id name="id">
      <generator class="org.hibernate.id.enhanced.SequenceStyleGenerator">
        <param name="sequence_name">rsk_hibernate_sequence</param>
      	<param name="optimizer">hilo</param>
      	<param name="increment_size">100</param>
      </generator>
    </id>
    <property name="type" column="type" not-null="true" type="target_type"/>
    <property name="uidScheme" column="id_scheme" not-null="true"/>
    <property name="uidValue" column="id_value" not-null="true"/>
    <property name="uidVersion" column="id_version"/>
  </class>
  
  <query name="ComputationTargetSpecification.one.byTypeAndUid">
    from HbComputationTargetSpecification as a where 
    a.type = :type and
    a.uidScheme = :uidScheme and
    a.uidValue = :uidValue and
    ((:uidVersion is NULL and a.uidVersion is NULL) OR (a.uidVersion = :uidVersion))
  </query>
    
</hibernate-mapping>
