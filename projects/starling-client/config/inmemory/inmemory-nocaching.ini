# Configuration to setup a main OpenGamma server

[global]
time.zone = ${time.zone}

#============================================================================
# Infrastructure

[standardFudgeContext]
factory = com.opengamma.component.factory.infrastructure.FudgeContextComponentFactory
classifier = standard

[standardCacheManagerFactory]
factory = com.opengamma.component.factory.infrastructure.CacheManagerComponentFactory
classifier = standard

[standardScheduledExecutorService]
factory = com.opengamma.component.factory.infrastructure.ScheduledExecutorServiceComponentFactory
classifier = standard

[standardMBeanServer]
factory = com.opengamma.component.factory.infrastructure.MBeanServerComponentFactory
classifier = standard

#============================================================================
# Database

[dbConfigMaster]
factory = com.opengamma.component.factory.master.InMemoryConfigMasterComponentFactory
classifier = central
publishRest = false

[dbExchangeMaster]
factory = com.opengamma.component.factory.master.InMemoryExchangeMasterComponentFactory
classifier = central
publishRest = false

[dbHolidayMaster]
factory = com.opengamma.component.factory.master.InMemoryHolidayMasterComponentFactory
classifier = central
publishRest = false

[memRegionMaster]
factory = com.opengamma.component.factory.master.InMemoryRegionMasterComponentFactory
classifier = central
publishRest = false

[dbSnapshotMaster]
factory = com.opengamma.component.factory.master.InMemorySnapshotMasterComponentFactory
classifier = central
publishRest = false

[dbSecurityMaster]
factory = com.opengamma.component.factory.master.InMemorySecurityMasterComponentFactory
classifier = central
publishRest = false

[dbConventionMaster]
factory = com.opengamma.component.factory.master.InMemoryConventionMasterComponentFactory
classifier = central
publishRest = false

[dbLegalEntityMaster]
factory = com.opengamma.component.factory.master.InMemoryLegalEntityMasterComponentFactory
classifier = central
publishRest = false

[dbPositionMaster]
factory = com.opengamma.component.factory.master.InMemoryPositionMasterComponentFactory
classifier = central
publishRest = false

[dbPortfolioMaster]
factory = com.opengamma.component.factory.master.InMemoryPortfolioMasterComponentFactory
classifier = central
publishRest = false

[dbHtsMaster]
factory = com.opengamma.component.factory.master.InMemoryHistoricalTimeSeriesMasterComponentFactory
classifier = central
publishRest = false

[dbFunctionCosts]
factory = com.opengamma.component.factory.master.InMemoryFunctionCostsMasterComponentFactory
classifier = central
publishRest = false

[userSnapshotMaster]
factory = com.opengamma.component.factory.master.InMemorySnapshotMasterComponentFactory
classifier = user
publishRest = false

[userSecurityMaster]
factory = com.opengamma.component.factory.master.InMemorySecurityMasterComponentFactory
classifier = user
idScheme = MemUsrSec
publishRest = false

[userPositionMaster]
factory = com.opengamma.component.factory.master.InMemoryPositionMasterComponentFactory
classifier = user
idScheme = MemUsrPos
publishRest = false

[userPortfolioMaster]
factory = com.opengamma.component.factory.master.InMemoryPortfolioMasterComponentFactory
classifier = user
idScheme = MemUsrPrt
publishRest = false

[userConfigMaster]
factory = com.opengamma.component.factory.master.InMemoryConfigMasterComponentFactory
classifier = user
idScheme = MemUsrCfg
publishRest = false

[combinedPositionMaster]
factory = com.opengamma.component.factory.master.CombinedPositionMasterComponentFactory
classifier = combined
defaultPositionMaster = ::central
positionMaster0 = PositionMaster::user
publishRest = false

#============================================================================
# Data loaders

[historicalTimeSeriesProvider]
factory = com.opengamma.component.factory.provider.HistoricalTimeSeriesProviderComponentFactory
classifier = unsupported
publishRest = false

[historicalTimeSeriesLoader]
factory = com.opengamma.component.factory.loader.UnsupportedHistoricalTimeSeriesLoaderComponentFactory
classifier = standard
publishRest = false

#============================================================================
# System communication

[configSource]
factory = com.opengamma.component.factory.source.UserFinancialConfigSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingConfigMaster = ::central
userClassifier = user
userConfigMaster = ::user
publishRest = false

[exchangeSource]
factory = com.opengamma.component.factory.source.ExchangeSourceComponentFactory
classifier = shared
exchangeMaster = ::central
publishRest = false

[holidaySource]
factory = com.opengamma.component.factory.source.HolidaySourceComponentFactory
classifier = shared
holidayMaster = ::central
publishRest = false

[regionSource]
factory = com.opengamma.component.factory.source.RegionSourceComponentFactory
classifier = shared
regionMaster = ::central
publishRest = false

[legalEntitySource]
factory = com.opengamma.component.factory.source.LegalEntitySourceComponentFactory
classifier = shared
legalEntityMaster = ::central
publishRest = false

[snapshotSource]
factory = com.opengamma.component.factory.source.UserFinancialMarketDataSnapshotSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingMarketDataSnapshotMaster = ::central
userClassifier = user
userMarketDataSnapshotMaster = ::user
publishRest = false

[securitySource]
factory = com.opengamma.component.factory.source.UserFinancialSecuritySourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingSecurityMaster = ::central
userClassifier = user
userSecurityMaster = ::user
publishRest = false

[positionSource]
factory = com.opengamma.component.factory.source.UserFinancialPositionSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingPositionMaster = ::central
underlyingPortfolioMaster = ::central
userClassifier = user
userPositionMaster = ::user
userPortfolioMaster = ::user
publishRest = false

[tempTargets]
factory = com.opengamma.component.factory.source.TempTargetRepositoryComponentFactory
classifier = shared
path = ${temptarget.path}
publishRest = false

[historicalTimeSeriesSource]
factory = com.opengamma.component.factory.source.HistoricalTimeSeriesSourceComponentFactory
classifier = shared
historicalTimeSeriesMaster = ::central
configSource = ::shared
publishRest = false

[currencyMatrixSource]
factory = com.opengamma.component.factory.source.CurrencyMatrixSourceComponentFactory
classifier = shared
configSource = ::shared
publishRest = false

[currencyPairsSource]
factory = com.opengamma.component.factory.source.CurrencyPairsSourceComponentFactory
classifier = shared
configSource = ::shared
publishRest = false

[conventionSource]
factory = com.opengamma.component.factory.source.ConventionSourceComponentFactory
classifier = shared
conventionMaster = ::central
publishRest = false

[functionConfigSource]
factory = com.mcleodmoores.starling.client.testutils.EmptyFunctionConfigurationSourceComponentFactory
classifier = shared
configMaster = ::central
publishRest = false

[targetResolver]
factory = com.opengamma.component.factory.engine.TargetResolverComponentFactory
classifier = combined
positionSource = ::combined
securitySource = ::combined
tempTargets = ::shared
currencyMatrixSource = ::shared
configSource = ::shared

#============================================================================
# Market data

[marketDataProviderResolver]
factory = com.opengamma.component.factory.engine.MinimalMarketDataProviderResolverComponentFactory
classifier = standard
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared

#============================================================================
# Engine

[engineContexts]
factory = com.opengamma.component.factory.engine.MinimalEngineContextsComponentFactory
classifier = main
configSource = ::shared
configMaster = ::user
securitySource = ::combined
positionSource = ::combined
targetResolver = ::combined
regionSource = ::shared
legalEntitySource = ::shared
holidaySource = ::shared
exchangeSource = ::shared
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared
tempTargetRepository = ::shared
conventionSource = ::shared
permissive = true

[financialUserManager]
factory = com.opengamma.component.factory.engine.MinimalFinancialUserManagerComponentFactory
classifier = main
securityMaster = ::user
positionMaster = ::user
portfolioMaster = ::user
snapshotMaster = ::user
configMaster = ::user
scheduler = ::standard
clientTimeOut = PT30M
publishRest = false

[viewProcessor]
factory = com.opengamma.component.factory.engine.SpringViewProcessorComponentFactory
springFile = classpath:/inmemory/inmemory-viewprocessor-spring.xml
propertiesFile = MANAGER.PROPERTIES
classifier = main
scheduler = ::standard
marketDataProviderResolver = ::standard
publishRest = false

[dependencyGraphTraceProvider]
factory = com.opengamma.component.factory.provider.LocalDependencyGraphTraceProviderFactory
classifier = main
compiledFunctionService = ::main
functionResolver = ::main
functionExclusionGroups = ::main
marketDataProviderResolver = ::standard
publishRest = false

[tests]
factory = com.opengamma.component.factory.test.TestsComponentFactory
enableSecurities = ${tests.createSecurityMaster}
enableSnapshots = ${tests.createSnapshotMaster}

[analyticService]
factory = com.mcleodmoores.starling.client.component.AnalyticServiceComponentFactory
classifier = main
positionSource = ::combined
configSource = ::shared
viewProcessor = ::main

[statelessAnalyticService]
factory = com.mcleodmoores.starling.client.component.StatelessAnalyticServiceComponentFactory
classifier = main
portfolioMaster = ::user
positionMaster = ::user
positionSource = ::user
securityMaster = ::user
securitySource = ::user
configMaster = ::user
configSource = ::combined
viewProcessor = ::main

[marketDataManager]
factory = com.mcleodmoores.starling.client.component.MarketDataManagerComponentFactory
classifier = main
historicalTimeSeriesMaster = ::central
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared
configSource = ::combined
securitySource = ::combined
viewProcessor = ::main

[portfolioManager]
factory = com.mcleodmoores.starling.client.component.PortfolioManagerComponentFactory
classifier = main
portfolioMaster = ::central
positionMaster = ::central
positionSource = ::combined
securityMaster = ::central
securitySource = ::combined

[configManager]
factory = com.mcleodmoores.starling.client.component.ConfigManagerComponentFactory
classifier = main
configMaster = ::central
configSource = ::combined

[toolContext]
factory = com.mcleodmoores.starling.client.component.StarlingToolContextComponentFactory
classifier = tool
configMaster = ::central
exchangeMaster = ::central
holidayMaster = ::central
regionMaster = ::central
securityMaster = ::central
positionMaster = ::central
portfolioMaster = ::central
legalEntityMaster = ::central
marketDataSnapshotMaster = ::central
historicalTimeSeriesMaster = ::central
historicalTimeSeriesResolver = ::shared
configSource = ::shared
exchangeSource = ::shared
holidaySource = ::shared
regionSource = ::shared
securitySource = ::shared
positionSource = ::shared
legalEntitySource = ::shared
marketDataSnapshotSource = ::shared
historicalTimeSeriesSource = ::shared
conventionSource = ::shared
conventionMaster = ::central
viewProcessor = ::main
marketDataManager = ::main
portfolioManager = ::main
configManager = ::main
analyticService = ::main
statelessAnalyticService = ::main
functionConfigSource = ::shared
