# Configuration to setup a main OpenGamma server

[global]
time.zone = ${time.zone}

#============================================================================
# Infrastructure

[standardFudgeContext]
factory = com.opengamma.component.factory.infrastructure.FudgeContextComponentFactory
classifier = standard

[standardJmsConnectorFactory]
factory = com.opengamma.component.factory.infrastructure.ActiveMqJmsConnectorComponentFactory
classifier = standard
clientBrokerUri = ${activeMQ.brokerURL}

[standardCacheManagerFactory]
factory = com.opengamma.component.factory.infrastructure.CacheManagerComponentFactory
classifier = standard

[standardScheduledExecutorService]
factory = com.opengamma.component.factory.infrastructure.ScheduledExecutorServiceComponentFactory
classifier = standard

[standardMBeanServer]
factory = com.opengamma.component.factory.infrastructure.MBeanServerComponentFactory
classifier = standard

#============================================================================
# Database

[dbConfigMaster]
factory = com.opengamma.component.factory.master.InMemoryConfigMasterComponentFactory
classifier = central
publishRest = false

[dbExchangeMaster]
factory = com.opengamma.component.factory.master.InMemoryExchangeMasterComponentFactory
classifier = central
publishRest = false

[dbHolidayMaster]
factory = com.opengamma.component.factory.master.InMemoryHolidayMasterComponentFactory
classifier = central
publishRest = false

[memRegionMaster]
factory = com.opengamma.component.factory.master.InMemoryRegionMasterComponentFactory
classifier = central
publishRest = false

[dbSnapshotMaster]
factory = com.opengamma.component.factory.master.InMemorySnapshotMasterComponentFactory
classifier = central
publishRest = false

[dbSecurityMaster]
factory = com.opengamma.component.factory.master.InMemorySecurityMasterComponentFactory
classifier = central
publishRest = false

[dbConventionMaster]
factory = com.opengamma.component.factory.master.InMemoryConventionMasterComponentFactory
classifier = central
publishRest = false

[dbLegalEntityMaster]
factory = com.opengamma.component.factory.master.InMemoryLegalEntityMasterComponentFactory
classifier = central
publishRest = false

[dbPositionMaster]
factory = com.opengamma.component.factory.master.InMemoryPositionMasterComponentFactory
classifier = central
publishRest = false

[dbPortfolioMaster]
factory = com.opengamma.component.factory.master.InMemoryPortfolioMasterComponentFactory
classifier = central
publishRest = false

[dbHtsMaster]
factory = com.opengamma.component.factory.master.InMemoryHistoricalTimeSeriesMasterComponentFactory
classifier = central
publishRest = false

[dbFunctionCosts]
factory = com.opengamma.component.factory.master.InMemoryFunctionCostsMasterComponentFactory
classifier = central
publishRest = false

[userSnapshotMaster]
factory = com.opengamma.component.factory.master.InMemorySnapshotMasterComponentFactory
classifier = user
publishRest = false

[userSecurityMaster]
factory = com.opengamma.component.factory.master.InMemorySecurityMasterComponentFactory
classifier = user
publishRest = false

[userPositionMaster]
factory = com.opengamma.component.factory.master.InMemoryPositionMasterComponentFactory
classifier = user
publishRest = false

[userPortfolioMaster]
factory = com.opengamma.component.factory.master.InMemoryPortfolioMasterComponentFactory
classifier = user
publishRest = false

[userConfigMaster]
factory = com.opengamma.component.factory.master.InMemoryConfigMasterComponentFactory
classifier = user

[combinedPositionMaster]
factory = com.opengamma.component.factory.master.CombinedPositionMasterComponentFactory
classifier = combined
defaultPositionMaster = ::central
positionMaster0 = PositionMaster::user

#============================================================================
# Data loaders

[historicalTimeSeriesProvider]
factory = com.opengamma.component.factory.provider.HistoricalTimeSeriesProviderComponentFactory
classifier = unsupported

[historicalTimeSeriesLoader]
factory = com.opengamma.component.factory.loader.UnsupportedHistoricalTimeSeriesLoaderComponentFactory
classifier = standard

#============================================================================
# System communication

[configSource]
factory = com.opengamma.component.factory.source.UserFinancialConfigSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingConfigMaster = ::central
userClassifier = user
userConfigMaster = ::user
cacheManager = ::standard

[exchangeSource]
factory = com.opengamma.component.factory.source.ExchangeSourceComponentFactory
classifier = shared
exchangeMaster = ::central
cacheManager = ::standard

[holidaySource]
factory = com.opengamma.component.factory.source.HolidaySourceComponentFactory
classifier = shared
holidayMaster = ::central

[regionSource]
factory = com.opengamma.component.factory.source.RegionSourceComponentFactory
classifier = shared
regionMaster = ::central
cacheManager = ::standard

[legalEntitySource]
factory = com.opengamma.component.factory.source.LegalEntitySourceComponentFactory
classifier = shared
legalEntityMaster = ::central

[snapshotSource]
factory = com.opengamma.component.factory.source.UserFinancialMarketDataSnapshotSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingMarketDataSnapshotMaster = ::central
userClassifier = user
userMarketDataSnapshotMaster = ::user

[securitySource]
factory = com.opengamma.component.factory.source.UserFinancialSecuritySourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingSecurityMaster = ::central
userClassifier = user
userSecurityMaster = ::user
cacheManager = ::standard

[positionSource]
factory = com.opengamma.component.factory.source.UserFinancialPositionSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingPositionMaster = ::central
underlyingPortfolioMaster = ::central
userClassifier = user
userPositionMaster = ::user
userPortfolioMaster = ::user
cacheManager = ::standard

[tempTargets]
factory = com.opengamma.component.factory.source.TempTargetRepositoryComponentFactory
classifier = shared
path = ${temptarget.path}

[historicalTimeSeriesSource]
factory = com.opengamma.component.factory.source.HistoricalTimeSeriesSourceComponentFactory
classifier = shared
historicalTimeSeriesMaster = ::central
configSource = ::shared
cacheManager = ::standard

[currencyMatrixSource]
factory = com.opengamma.component.factory.source.CurrencyMatrixSourceComponentFactory
classifier = shared
configSource = ::shared

[currencyPairsSource]
factory = com.opengamma.component.factory.source.CurrencyPairsSourceComponentFactory
classifier = shared
configSource = ::shared

[interpolatedYieldCurveSpecificationBuilder]
factory = com.opengamma.component.factory.source.InterpolatedYieldCurveSpecificationBuilderComponentFactory
classifier = shared
configSource = ::shared

[curveSpecificationBuilder]
factory = com.opengamma.component.factory.source.CurveSpecificationBuilderComponentFactory
classifier = shared
configSource = ::shared

[interpolatedYieldCurveDefinitionSource]
factory = com.opengamma.component.factory.source.UserFinancialInterpolatedYieldCurveDefinitionSourceComponentFactory
classifier = combined
underlyingClassifier = shared
underlyingConfigSource = ::shared
userClassifier = user
cacheManager = ::standard

[volatilityCubeDefinitionSource]
factory = com.opengamma.component.factory.source.VolatilityCubeDefinitionSourceComponentFactory
classifier = combined
configSource = ::shared

[conventionBundleSource]
factory = com.opengamma.component.factory.source.ConventionBundleSourceComponentFactory
classifier = shared

[conventionSource]
factory = com.opengamma.component.factory.source.ConventionSourceComponentFactory
classifier = shared
conventionMaster = ::central
cacheManager = ::standard

[functionConfigurationSource]
factory = ${function.config.source}
classifier = shared
configMaster = ::central

[targetResolver]
factory = com.opengamma.component.factory.engine.TargetResolverComponentFactory
classifier = combined
positionSource = ::combined
securitySource = ::combined
tempTargets = ::shared
cacheManager = ::standard
currencyMatrixSource = ::shared
configSource = ::shared

#============================================================================
# Market data

#[marketData]
#factory =  com.opengamma.component.factory.livedata.LiveMarketDataProviderFactoryComponentFactory
#classifier = main
#jmsConnector = ::standard
#defaultProviders = Bloomberg

[marketDataProviderResolver]
factory = com.opengamma.component.factory.engine.MarketDataProviderResolverComponentFactory
classifier = standard
#liveMarketDataProviderFactory = ::main
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared
marketDataSnapshotSource = ::combined

#============================================================================
# Engine

[engineContexts]
factory = com.opengamma.component.factory.engine.EngineContextsComponentFactory
classifier = main
configSource = ::shared
configMaster = ::user
securitySource = ::combined
positionSource = ::combined
targetResolver = ::combined
regionSource = ::shared
legalEntitySource = ::shared
conventionBundleSource = ::shared
interpolatedYieldCurveDefinitionSource = ::combined
interpolatedYieldCurveSpecificationBuilder = ::shared
volatilityCubeDefinitionSource = ::combined
holidaySource = ::shared
exchangeSource = ::shared
historicalTimeSeriesSource = ::shared
historicalTimeSeriesResolver = ::shared
tempTargetRepository = ::shared
conventionSource = ::shared
permissive = true

#[dbBatchMaster]
#factory = com.opengamma.component.factory.master.InMemoryBatchMasterComponentFactory
#classifier = shared
#dbConnector = ::bat
#computationTargetResolver = ::combined
#enforceSchemaVersion = ${component.master.enforceSchemaVersion}

[financialUserManager]
factory = com.opengamma.component.factory.engine.FinancialUserManagerComponentFactory
classifier = main
securityMaster = ::user
positionMaster = ::user
portfolioMaster = ::user
snapshotMaster = ::user
configMaster = ::user
yieldCurveDefinitionMaster = ::user
scheduler = ::standard
clientTimeOut = PT30M

[viewProcessor]
factory = com.opengamma.component.factory.engine.SpringViewProcessorComponentFactory
springFile = classpath:com/mcleodmoores/starling/client/config/fullstack/fullstack-viewprocessor-spring.xml
propertiesFile = MANAGER.PROPERTIES
classifier = main
jmsConnector = ::standard
scheduler = ::standard
volatilityCubeDefinitionSource = ::combined
marketDataProviderResolver = ::standard
jmsBrokerUri = ${activeMQ.brokerURL}
jmsMarketDataAvailabilityTopic = ${livedata.availability.topic}

[dependencyGraphTraceProvider]
factory = com.opengamma.component.factory.provider.LocalDependencyGraphTraceProviderFactory
classifier = main
compiledFunctionService = ::main
functionResolver = ::main
functionExclusionGroups = ::main
marketDataProviderResolver = ::standard

#[defaultConfiguration]
#factory = com.opengamma.component.factory.engine.EngineConfigurationComponentFactory
#classifier = default
#publishRest = false
#description = Default OpenGamma installation
##securityMaster = SecurityMaster::central
#positionMaster = PositionMaster::central
#portfolioMaster = PortfolioMaster::central
#marketDataSnapshotMaster = MarketDataSnapshotMaster::central
#historicalTimeSeriesMaster = HistoricalTimeSeriesMaster::central
#configMaster = ConfigMaster::central
#configSource = ConfigSource::shared
#exchangeSource = ExchangeSource::shared
#holidaySource = HolidaySource::shared
#regionSource = RegionSource::shared
#securitySource = SecuritySource::combined
#positionSource = PositionSource::combined
#marketDataSnapshotSource = MarketDataSnapshotSource::combined
#historicalTimeSeriesSource = HistoricalTimeSeriesSource::shared
#historicalTimeSeriesResolver = HistoricalTimeSeriesResolver::shared
#currencyMatrixSource = CurrencyMatrixSource::shared
#currencyPairsSource = CurrencyPairsSource::shared
#curveSpecificationBuilder = CurveSpecificationBuilder::shared
#interpolatedYieldCurveDefinitionSource = InterpolatedYieldCurveDefinitionSource::combined
#interpolatedYieldCurveSpecificationBuilder = InterpolatedYieldCurveSpecificationBuilder::shared
#volatilityCubeDefinitionSource = VolatilityCubeDefinitionSource::combined
#functionRepositoryConfiguration = FunctionConfigurationSource::shared
#userData = FinancialUserManager::main
#remoteCalcNode = CalcNodeSocketConfiguration::main
#availableOutputs = AvailableOutputsProvider::main
#viewProcessor = ViewProcessor::main
#activeMQ = ${activeMQ.brokerURL}
#liveDataClient.subscriptionTopic = ${liveDataClient.subscriptionTopic}
#liveDataClient.entitlementTopic = ${liveDataClient.entitlementTopic}
#liveDataClient.heartbeatTopic = ${liveDataClient.heartbeatTopic}
#conventionBundleSource = ConventionBundleSource::shared
#conventionSource = ConventionSource::shared
#legalEntitySource = LegalEntitySource::shared

[tests]
factory = com.opengamma.component.factory.test.TestsComponentFactory
enableSecurities = ${tests.createSecurityMaster}
enableSnapshots = ${tests.createSnapshotMaster}
enableYieldCurves = ${tests.createInterpolatedYieldCurveDefinitionMaster}

#============================================================================
# Jetty

#[freemarker]
#factory = com.opengamma.component.factory.web.FreemarkerConfigurationComponentFactory
#templateLocations = ${freemarker.template.locations}

#[webBasics]
#factory = com.opengamma.component.factory.web.WebsiteBasicsComponentFactory
#configMaster = ::central
#exchangeMaster = ::central
#holidayMaster = ::central
#regionMaster = ::central
#securityMaster = ::central
#securitySource = ::shared
#securityLoader = ::standard
#conventionMaster = ::central
#positionMaster = ::combined
#portfolioMaster = ::central
##batchMaster = ::shared
#historicalTimeSeriesMaster = ::central
#historicalTimeSeriesSource = ::shared
#historicalTimeSeriesLoader = ::standard
#scheduler = ::standard
#legalEntityMaster = ::central
#marketDataSnapshotMaster = ::central
#viewProcessor = ::main
#computationTargetResolver = ::combined
#volatilityCubeDefinitionSource = ::combined
#functionConfigurationSource = ::shared

#[webBundle]
#factory = com.opengamma.component.factory.web.WebsiteBundleComponentFactory
#deployMode = ${component.webBundle.deployMode}
#baseDir = prototype
#cacheManager = ::standard

#[webAnalytics]
#factory = com.opengamma.component.factory.web.WebsiteViewportsComponentFactory
#configMaster = ::central
#securityMaster = ::central
#securitySource = ::combined
#positionMaster = ::central
#portfolioMaster = ::central
#positionSource = ::combined
#computationTargetResolver = ::combined
#functions = ::shared
#historicalTimeSeriesMaster = ::central
#legalEntityMaster = ::central
#userPositionMaster = ::user
#userPortfolioMaster = ::user
#userConfigMaster = ::user
#combinedConfigSource = ::combined
#viewProcessor = ::main
#portfolioAggregationFunctions = ::main
#marketDataSnapshotMaster = ::central
#user = ::main

#[jetty]
#factory = com.opengamma.component.factory.EmbeddedJettyComponentFactory
#resourceBase = ${jetty.resourceBase}
#port = ${jetty.port}
#securePort = ${jetty.securePort}

[toolContext]
factory = com.opengamma.component.factory.tool.ToolContextComponentFactory
classifier = tool
configMaster = ::central
exchangeMaster = ::central
holidayMaster = ::central
regionMaster = ::central
securityMaster = ::central
positionMaster = ::central
portfolioMaster = ::central
legalEntityMaster = ::central
marketDataSnapshotMaster = ::central
historicalTimeSeriesMaster = ::central
configSource = ::shared
exchangeSource = ::shared
holidaySource = ::shared
regionSource = ::shared
securitySource = ::shared
positionSource = ::shared
legalEntitySource = ::shared
marketDataSnapshotSource = ::shared
historicalTimeSeriesSource = ::shared
conventionBundleSource = ::shared
conventionSource = ::shared
conventionMaster = ::central
viewProcessor = ::main
