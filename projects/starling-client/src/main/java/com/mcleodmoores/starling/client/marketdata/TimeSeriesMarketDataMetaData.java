/**
 * Copyright (C) 2015 - present McLeod Moores Software Limited.  All rights reserved.
 */
package com.mcleodmoores.starling.client.marketdata;

import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Set;

import org.joda.beans.Bean;
import org.joda.beans.BeanDefinition;
import org.joda.beans.ImmutableBean;
import org.joda.beans.JodaBeanUtils;
import org.joda.beans.MetaProperty;
import org.joda.beans.Property;
import org.joda.beans.PropertyDefinition;
import org.joda.beans.impl.direct.DirectFieldsBeanBuilder;
import org.joda.beans.impl.direct.DirectMetaBean;
import org.joda.beans.impl.direct.DirectMetaProperty;
import org.joda.beans.impl.direct.DirectMetaPropertyMap;
import org.threeten.bp.LocalDate;

/**
 * Meta-data class describing a time series required by the calculation engine.
 */
@BeanDefinition
public final class TimeSeriesMarketDataMetaData implements MarketDataMetaData, ImmutableBean {
  /**
   * The type of the time series.
   */
  @PropertyDefinition(validate = "notNull")
  private final Class<?> _type;
  // See HistoricalTimeSeriesFunctionUtils for values here.
  /**
   * This string describes any adjustment made to the time series as a mini DSL - see HistoricalTimeSeriesAdjustment for some details
   */
  @PropertyDefinition
  private final String _adjust;
  /**
   * This representing the maximum age of the time series - this will prevent resolution of series more than n days old.
   * A value of "Unlimited" will ignore any age.
   */
  @PropertyDefinition
  private final String _ageLimit;
  /**
   * The start date of the series.
   */
  @PropertyDefinition
  private final LocalDate _startDate;
  /**
   * Whether to include the start date's data point.
   */
  @PropertyDefinition
  private final boolean _includeStart;
  /**
   * The end date of the series.
   */
  @PropertyDefinition
  private final LocalDate _endDate;
  /**
   * Whether to include the end date's data point.
   */
  @PropertyDefinition
  private final boolean _includeEnd;

  //------------------------- AUTOGENERATED START -------------------------
  ///CLOVER:OFF
  /**
   * The meta-bean for {@code TimeSeriesMarketDataMetaData}.
   * @return the meta-bean, not null
   */
  public static TimeSeriesMarketDataMetaData.Meta meta() {
    return TimeSeriesMarketDataMetaData.Meta.INSTANCE;
  }

  static {
    JodaBeanUtils.registerMetaBean(TimeSeriesMarketDataMetaData.Meta.INSTANCE);
  }

  /**
   * Returns a builder used to create an instance of the bean.
   * @return the builder, not null
   */
  public static TimeSeriesMarketDataMetaData.Builder builder() {
    return new TimeSeriesMarketDataMetaData.Builder();
  }

  private TimeSeriesMarketDataMetaData(
      Class<?> type,
      String adjust,
      String ageLimit,
      LocalDate startDate,
      boolean includeStart,
      LocalDate endDate,
      boolean includeEnd) {
    JodaBeanUtils.notNull(type, "type");
    this._type = type;
    this._adjust = adjust;
    this._ageLimit = ageLimit;
    this._startDate = startDate;
    this._includeStart = includeStart;
    this._endDate = endDate;
    this._includeEnd = includeEnd;
  }

  @Override
  public TimeSeriesMarketDataMetaData.Meta metaBean() {
    return TimeSeriesMarketDataMetaData.Meta.INSTANCE;
  }

  @Override
  public <R> Property<R> property(String propertyName) {
    return metaBean().<R>metaProperty(propertyName).createProperty(this);
  }

  @Override
  public Set<String> propertyNames() {
    return metaBean().metaPropertyMap().keySet();
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the type of the time series.
   * @return the value of the property, not null
   */
  public Class<?> getType() {
    return _type;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets this string describes any adjustment made to the time series as a mini DSL - see HistoricalTimeSeriesAdjustment for some details
   * @return the value of the property
   */
  public String getAdjust() {
    return _adjust;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets this representing the maximum age of the time series - this will prevent resolution of series more than n days old.
   * A value of "Unlimited" will ignore any age.
   * @return the value of the property
   */
  public String getAgeLimit() {
    return _ageLimit;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the start date of the series.
   * @return the value of the property
   */
  public LocalDate getStartDate() {
    return _startDate;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets whether to include the start date's data point.
   * @return the value of the property
   */
  public boolean isIncludeStart() {
    return _includeStart;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets the end date of the series.
   * @return the value of the property
   */
  public LocalDate getEndDate() {
    return _endDate;
  }

  //-----------------------------------------------------------------------
  /**
   * Gets whether to include the end date's data point.
   * @return the value of the property
   */
  public boolean isIncludeEnd() {
    return _includeEnd;
  }

  //-----------------------------------------------------------------------
  /**
   * Returns a builder that allows this bean to be mutated.
   * @return the mutable builder, not null
   */
  public Builder toBuilder() {
    return new Builder(this);
  }

  @Override
  public boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj != null && obj.getClass() == this.getClass()) {
      TimeSeriesMarketDataMetaData other = (TimeSeriesMarketDataMetaData) obj;
      return JodaBeanUtils.equal(getType(), other.getType()) &&
          JodaBeanUtils.equal(getAdjust(), other.getAdjust()) &&
          JodaBeanUtils.equal(getAgeLimit(), other.getAgeLimit()) &&
          JodaBeanUtils.equal(getStartDate(), other.getStartDate()) &&
          (isIncludeStart() == other.isIncludeStart()) &&
          JodaBeanUtils.equal(getEndDate(), other.getEndDate()) &&
          (isIncludeEnd() == other.isIncludeEnd());
    }
    return false;
  }

  @Override
  public int hashCode() {
    int hash = getClass().hashCode();
    hash = hash * 31 + JodaBeanUtils.hashCode(getType());
    hash = hash * 31 + JodaBeanUtils.hashCode(getAdjust());
    hash = hash * 31 + JodaBeanUtils.hashCode(getAgeLimit());
    hash = hash * 31 + JodaBeanUtils.hashCode(getStartDate());
    hash = hash * 31 + JodaBeanUtils.hashCode(isIncludeStart());
    hash = hash * 31 + JodaBeanUtils.hashCode(getEndDate());
    hash = hash * 31 + JodaBeanUtils.hashCode(isIncludeEnd());
    return hash;
  }

  @Override
  public String toString() {
    StringBuilder buf = new StringBuilder(256);
    buf.append("TimeSeriesMarketDataMetaData{");
    buf.append("type").append('=').append(getType()).append(',').append(' ');
    buf.append("adjust").append('=').append(getAdjust()).append(',').append(' ');
    buf.append("ageLimit").append('=').append(getAgeLimit()).append(',').append(' ');
    buf.append("startDate").append('=').append(getStartDate()).append(',').append(' ');
    buf.append("includeStart").append('=').append(isIncludeStart()).append(',').append(' ');
    buf.append("endDate").append('=').append(getEndDate()).append(',').append(' ');
    buf.append("includeEnd").append('=').append(JodaBeanUtils.toString(isIncludeEnd()));
    buf.append('}');
    return buf.toString();
  }

  //-----------------------------------------------------------------------
  /**
   * The meta-bean for {@code TimeSeriesMarketDataMetaData}.
   */
  public static final class Meta extends DirectMetaBean {
    /**
     * The singleton instance of the meta-bean.
     */
    static final Meta INSTANCE = new Meta();

    /**
     * The meta-property for the {@code type} property.
     */
    @SuppressWarnings({"unchecked", "rawtypes" })
    private final MetaProperty<Class<?>> _type = DirectMetaProperty.ofImmutable(
        this, "type", TimeSeriesMarketDataMetaData.class, (Class) Class.class);
    /**
     * The meta-property for the {@code adjust} property.
     */
    private final MetaProperty<String> _adjust = DirectMetaProperty.ofImmutable(
        this, "adjust", TimeSeriesMarketDataMetaData.class, String.class);
    /**
     * The meta-property for the {@code ageLimit} property.
     */
    private final MetaProperty<String> _ageLimit = DirectMetaProperty.ofImmutable(
        this, "ageLimit", TimeSeriesMarketDataMetaData.class, String.class);
    /**
     * The meta-property for the {@code startDate} property.
     */
    private final MetaProperty<LocalDate> _startDate = DirectMetaProperty.ofImmutable(
        this, "startDate", TimeSeriesMarketDataMetaData.class, LocalDate.class);
    /**
     * The meta-property for the {@code includeStart} property.
     */
    private final MetaProperty<Boolean> _includeStart = DirectMetaProperty.ofImmutable(
        this, "includeStart", TimeSeriesMarketDataMetaData.class, Boolean.TYPE);
    /**
     * The meta-property for the {@code endDate} property.
     */
    private final MetaProperty<LocalDate> _endDate = DirectMetaProperty.ofImmutable(
        this, "endDate", TimeSeriesMarketDataMetaData.class, LocalDate.class);
    /**
     * The meta-property for the {@code includeEnd} property.
     */
    private final MetaProperty<Boolean> _includeEnd = DirectMetaProperty.ofImmutable(
        this, "includeEnd", TimeSeriesMarketDataMetaData.class, Boolean.TYPE);
    /**
     * The meta-properties.
     */
    private final Map<String, MetaProperty<?>> _metaPropertyMap$ = new DirectMetaPropertyMap(
        this, null,
        "type",
        "adjust",
        "ageLimit",
        "startDate",
        "includeStart",
        "endDate",
        "includeEnd");

    /**
     * Restricted constructor.
     */
    private Meta() {
    }

    @Override
    protected MetaProperty<?> metaPropertyGet(String propertyName) {
      switch (propertyName.hashCode()) {
        case 3575610:  // type
          return _type;
        case -1422313585:  // adjust
          return _adjust;
        case 1437444604:  // ageLimit
          return _ageLimit;
        case -2129778896:  // startDate
          return _startDate;
        case -60741478:  // includeStart
          return _includeStart;
        case -1607727319:  // endDate
          return _endDate;
        case 840145683:  // includeEnd
          return _includeEnd;
      }
      return super.metaPropertyGet(propertyName);
    }

    @Override
    public TimeSeriesMarketDataMetaData.Builder builder() {
      return new TimeSeriesMarketDataMetaData.Builder();
    }

    @Override
    public Class<? extends TimeSeriesMarketDataMetaData> beanType() {
      return TimeSeriesMarketDataMetaData.class;
    }

    @Override
    public Map<String, MetaProperty<?>> metaPropertyMap() {
      return _metaPropertyMap$;
    }

    //-----------------------------------------------------------------------
    /**
     * The meta-property for the {@code type} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Class<?>> type() {
      return _type;
    }

    /**
     * The meta-property for the {@code adjust} property.
     * @return the meta-property, not null
     */
    public MetaProperty<String> adjust() {
      return _adjust;
    }

    /**
     * The meta-property for the {@code ageLimit} property.
     * @return the meta-property, not null
     */
    public MetaProperty<String> ageLimit() {
      return _ageLimit;
    }

    /**
     * The meta-property for the {@code startDate} property.
     * @return the meta-property, not null
     */
    public MetaProperty<LocalDate> startDate() {
      return _startDate;
    }

    /**
     * The meta-property for the {@code includeStart} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Boolean> includeStart() {
      return _includeStart;
    }

    /**
     * The meta-property for the {@code endDate} property.
     * @return the meta-property, not null
     */
    public MetaProperty<LocalDate> endDate() {
      return _endDate;
    }

    /**
     * The meta-property for the {@code includeEnd} property.
     * @return the meta-property, not null
     */
    public MetaProperty<Boolean> includeEnd() {
      return _includeEnd;
    }

    //-----------------------------------------------------------------------
    @Override
    protected Object propertyGet(Bean bean, String propertyName, boolean quiet) {
      switch (propertyName.hashCode()) {
        case 3575610:  // type
          return ((TimeSeriesMarketDataMetaData) bean).getType();
        case -1422313585:  // adjust
          return ((TimeSeriesMarketDataMetaData) bean).getAdjust();
        case 1437444604:  // ageLimit
          return ((TimeSeriesMarketDataMetaData) bean).getAgeLimit();
        case -2129778896:  // startDate
          return ((TimeSeriesMarketDataMetaData) bean).getStartDate();
        case -60741478:  // includeStart
          return ((TimeSeriesMarketDataMetaData) bean).isIncludeStart();
        case -1607727319:  // endDate
          return ((TimeSeriesMarketDataMetaData) bean).getEndDate();
        case 840145683:  // includeEnd
          return ((TimeSeriesMarketDataMetaData) bean).isIncludeEnd();
      }
      return super.propertyGet(bean, propertyName, quiet);
    }

    @Override
    protected void propertySet(Bean bean, String propertyName, Object newValue, boolean quiet) {
      metaProperty(propertyName);
      if (quiet) {
        return;
      }
      throw new UnsupportedOperationException("Property cannot be written: " + propertyName);
    }

  }

  //-----------------------------------------------------------------------
  /**
   * The bean-builder for {@code TimeSeriesMarketDataMetaData}.
   */
  public static final class Builder extends DirectFieldsBeanBuilder<TimeSeriesMarketDataMetaData> {

    private Class<?> _type;
    private String _adjust;
    private String _ageLimit;
    private LocalDate _startDate;
    private boolean _includeStart;
    private LocalDate _endDate;
    private boolean _includeEnd;

    /**
     * Restricted constructor.
     */
    private Builder() {
    }

    /**
     * Restricted copy constructor.
     * @param beanToCopy  the bean to copy from, not null
     */
    private Builder(TimeSeriesMarketDataMetaData beanToCopy) {
      this._type = beanToCopy.getType();
      this._adjust = beanToCopy.getAdjust();
      this._ageLimit = beanToCopy.getAgeLimit();
      this._startDate = beanToCopy.getStartDate();
      this._includeStart = beanToCopy.isIncludeStart();
      this._endDate = beanToCopy.getEndDate();
      this._includeEnd = beanToCopy.isIncludeEnd();
    }

    //-----------------------------------------------------------------------
    @Override
    public Object get(String propertyName) {
      switch (propertyName.hashCode()) {
        case 3575610:  // type
          return _type;
        case -1422313585:  // adjust
          return _adjust;
        case 1437444604:  // ageLimit
          return _ageLimit;
        case -2129778896:  // startDate
          return _startDate;
        case -60741478:  // includeStart
          return _includeStart;
        case -1607727319:  // endDate
          return _endDate;
        case 840145683:  // includeEnd
          return _includeEnd;
        default:
          throw new NoSuchElementException("Unknown property: " + propertyName);
      }
    }

    @Override
    public Builder set(String propertyName, Object newValue) {
      switch (propertyName.hashCode()) {
        case 3575610:  // type
          this._type = (Class<?>) newValue;
          break;
        case -1422313585:  // adjust
          this._adjust = (String) newValue;
          break;
        case 1437444604:  // ageLimit
          this._ageLimit = (String) newValue;
          break;
        case -2129778896:  // startDate
          this._startDate = (LocalDate) newValue;
          break;
        case -60741478:  // includeStart
          this._includeStart = (Boolean) newValue;
          break;
        case -1607727319:  // endDate
          this._endDate = (LocalDate) newValue;
          break;
        case 840145683:  // includeEnd
          this._includeEnd = (Boolean) newValue;
          break;
        default:
          throw new NoSuchElementException("Unknown property: " + propertyName);
      }
      return this;
    }

    @Override
    public Builder set(MetaProperty<?> property, Object value) {
      super.set(property, value);
      return this;
    }

    @Override
    public Builder setString(String propertyName, String value) {
      setString(meta().metaProperty(propertyName), value);
      return this;
    }

    @Override
    public Builder setString(MetaProperty<?> property, String value) {
      super.setString(property, value);
      return this;
    }

    @Override
    public Builder setAll(Map<String, ? extends Object> propertyValueMap) {
      super.setAll(propertyValueMap);
      return this;
    }

    @Override
    public TimeSeriesMarketDataMetaData build() {
      return new TimeSeriesMarketDataMetaData(
          _type,
          _adjust,
          _ageLimit,
          _startDate,
          _includeStart,
          _endDate,
          _includeEnd);
    }

    //-----------------------------------------------------------------------
    /**
     * Sets the type of the time series.
     * @param type  the new value, not null
     * @return this, for chaining, not null
     */
    public Builder type(Class<?> type) {
      JodaBeanUtils.notNull(type, "type");
      this._type = type;
      return this;
    }

    /**
     * Sets this string describes any adjustment made to the time series as a mini DSL - see HistoricalTimeSeriesAdjustment for some details
     * @param adjust  the new value
     * @return this, for chaining, not null
     */
    public Builder adjust(String adjust) {
      this._adjust = adjust;
      return this;
    }

    /**
     * Sets this representing the maximum age of the time series - this will prevent resolution of series more than n days old.
     * A value of "Unlimited" will ignore any age.
     * @param ageLimit  the new value
     * @return this, for chaining, not null
     */
    public Builder ageLimit(String ageLimit) {
      this._ageLimit = ageLimit;
      return this;
    }

    /**
     * Sets the start date of the series.
     * @param startDate  the new value
     * @return this, for chaining, not null
     */
    public Builder startDate(LocalDate startDate) {
      this._startDate = startDate;
      return this;
    }

    /**
     * Sets whether to include the start date's data point.
     * @param includeStart  the new value
     * @return this, for chaining, not null
     */
    public Builder includeStart(boolean includeStart) {
      this._includeStart = includeStart;
      return this;
    }

    /**
     * Sets the end date of the series.
     * @param endDate  the new value
     * @return this, for chaining, not null
     */
    public Builder endDate(LocalDate endDate) {
      this._endDate = endDate;
      return this;
    }

    /**
     * Sets whether to include the end date's data point.
     * @param includeEnd  the new value
     * @return this, for chaining, not null
     */
    public Builder includeEnd(boolean includeEnd) {
      this._includeEnd = includeEnd;
      return this;
    }

    //-----------------------------------------------------------------------
    @Override
    public String toString() {
      StringBuilder buf = new StringBuilder(256);
      buf.append("TimeSeriesMarketDataMetaData.Builder{");
      buf.append("type").append('=').append(JodaBeanUtils.toString(_type)).append(',').append(' ');
      buf.append("adjust").append('=').append(JodaBeanUtils.toString(_adjust)).append(',').append(' ');
      buf.append("ageLimit").append('=').append(JodaBeanUtils.toString(_ageLimit)).append(',').append(' ');
      buf.append("startDate").append('=').append(JodaBeanUtils.toString(_startDate)).append(',').append(' ');
      buf.append("includeStart").append('=').append(JodaBeanUtils.toString(_includeStart)).append(',').append(' ');
      buf.append("endDate").append('=').append(JodaBeanUtils.toString(_endDate)).append(',').append(' ');
      buf.append("includeEnd").append('=').append(JodaBeanUtils.toString(_includeEnd));
      buf.append('}');
      return buf.toString();
    }

  }

  ///CLOVER:ON
  //-------------------------- AUTOGENERATED END --------------------------
}
